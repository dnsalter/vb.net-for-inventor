'1st Edition programmed by Daniel Salter 13 Sept. 17
'Use caution in using this script as it has not been tested with every type of beam
Imports System
Sub Main()
	'///
	' Get the active assembly document.
	MessageBox.Show("This script changes imperial stock numbers to metric." & 
	" Be sure to save a backup in the off chance this script fails. Clicking" &
	" cancel will result in an Error", "Dialogue Box")
	Dim oAsmDoc As AssemblyDocument = ThisApplication.ActiveDocument
	' Iterate through all of the documents referenced by the assembly.
	Dim oDoc As Document
	For Each oDoc In oAsmDoc.AllReferencedDocuments
		' Verify that the document is a part.
		If oDoc.DocumentType = kPartDocumentObject Then
		Dim oPartDoc As PartDocument = oDoc
		'Manipulate part 
		Dim model As String = oPartDoc.DisplayName
		'https://forums.autodesk.com/t5/inventor-forum/ilogic-fun-changing-an-iproperty-In-Each-part-Of-an-Assembly/td-p/6223677
		'the above code is adapted to suit this program from the link above
		'///
		
		'///
		Dim propertyName1 As String = "STOCK NUM METRIC (MM)"
		customPropertySet = ThisDoc.Document.PropertySets.Item _
		("Inventor User Defined Properties")
		'http://inventortrenches.blogspot.ca/2011/05/use-ilogic-to-add-and-use-custom.html
		'the code above was adapted from the link above to suit the needs of this script
		'///
			
		Dim stockNum As String = iProperties.Value(model, "Project", "Stock Number")
		Dim stockNumSplit() As String
		Dim loopNum As Integer
		Dim identifier As String
		Dim j As Integer
		Dim byFive As String = "C 3C 4C 6C 7C 9 C 15W 4W 6W 24W 30"
		'Temp workaround that accounts for numbers that need to be rounded by 5 to be correct
		
		If stockNum.Contains(" x ")
			identifier = " x "
		Else If stockNum.Contains("x")
			identifier = "x"
		Else
		End If
		'Workaround allows for both 3 and 2 dimensional frames to utilize this program
		
		Dim stockNumMetric(countChar(stockNum,"x"c)) As String
		
		If stockNum.Contains("x") And Not(stockNum.Contains("("))
		'weeds out parts that currently cause problems with the script
			stockNumSplit = Split(stockNum, identifier, , CompareMethod.Text)
			loopNum = countChar(stockNum,"x"c)
		'this effectively ignores parts whos Stock Number iProperty will mess up this script
			For i = 0 To loopNum
				If stockNum.Contains("C") Or stockNum.Contains("W")
				'This whole decision making structure allows for proper conversions
					If stockNumSplit(0) = "W 40"
						stockNumMetric(0) = 1000
					'special case that only occurs for one designation
					Else If byFive.Contains(stockNumSplit(0))
						stockNumMetric(0) = Math.Round(fracToInt(stockNumSplit(0)) * 25.4 / 5) * 5
					'convert and round to nearest 5
					Else
						stockNumMetric(0) = Math.Round(fracToInt(stockNumSplit(0)) * 25.4 / 10) * 10
					'convert and round to nearest 10
					End If
					
					If stockNumSplit(1) = "19"
						stockNumMetric(1) = 24
					'Special case that only occurs for specific weight/length
					Else
						stockNumMetric(1) = Math.Round(fracToInt(stockNumSplit(1)) * 1.48816)
						'conversion from lb/ft to kg/m
					End If
				Else
					stockNumMetric(i) = fracToInt(stockNumSplit(i)) * 25.4
				End If
				'convert the decimal version of the mixed fraction from inches to millimeters
			Next
			
			'///
			Try
				prop = customPropertySet.Item(propertyName1)
			Catch
				customPropertySet.Add("",propertyName1)
			End Try
		
			RuleParametersOutput()
			InventorVb.DocumentUpdate()
			If stockNum.Contains(" x ")
				If stockNum.Contains("C")
					iProperties.Value(model, "Custom","STOCK NUM METRIC (MM)") = "C " & stockNumMetric(0) & " x " & stockNumMetric(1)
				Else If stockNum.Contains("W")
					iProperties.Value(model, "Custom","STOCK NUM METRIC (MM)") = "W " & stockNumMetric(0) & " x " & stockNumMetric(1)
				Else
					iProperties.Value(model, "Custom","STOCK NUM METRIC (MM)") = stockNumMetric(0) & " x " & stockNumMetric(1) & " x " & stockNumMetric(2)
				End If
			Else If stockNum.Contains("x")
				iProperties.Value(model, "Custom","STOCK NUM METRIC (MM)") = stockNumMetric(0) & " x " & stockNumMetric(1)
			Else
			End If
			'http://inventortrenches.blogspot.ca/2011/05/use-ilogic-to-add-and-use-custom.html
			'the code above was adapted from the link above to suit the needs of this script
			'///
			
		Else
		End If
		Else
		End If
	Next
	iLogicVb.UpdateWhenDone = True
	
	MessageBox.Show("New custom iProperty called STOCK NUM METRIC (MM) has been associated with all" &
	" appropriate parts.", "Dialogue Box")
End Sub

Function fracToInt(ByVal num As String)
	Dim temp1(2) As String
	Dim temp2(2) As String
	Dim temp3 As Double
	'temp1 handles strings with " " temp2 handles strings with "/" temp3 handles plain numbers
	
	If num.Contains(" ")
		temp1 = num.Split(" "c)
	'if the index contains a space (ex 2 1/2) this splits it into an array at the space (ex [2, 1/2])
		If temp1(1).Contains("/")
			temp2 = temp1(1).Split("/"c)
		'if the index contains a backslash (ex 1/2) this splits it into an array at the backslash (ex [1, 2])
			temp3 = CDbl(temp2(0)) / CDbl(temp2(1))
			'take the two numbers in the array, turns them each into doubles, and divides them
		Else If temp1(0) = "C" Or temp1(0) = "W"
			temp3 = CDbl(temp1(1))
		Else
		End If
		
		If Not(temp1(0) = "C") And Not(temp1(0) = "W")
			temp3 += CDbl(temp1(0))
			'adds the whole number from the initial mixed fraction to the decimal conversion of the fraction
		Else
		End If
				
	ElseIf num.Contains("/")
		temp2 = num.Split("/"c)
		temp3 = CDbl(temp2(0)) / CDbl(temp2(1))
				
	Else
		temp3 = CDbl(num)
	End If
	fracToInt = temp3
End Function

Function countChar(ByVal stringVal as String, ByVal ch As Char) As Integer
'function counts all occurances of a character in a string
	Dim count As Integer = 0
	For Each c As Char In stringVal
		If c = ch
			count += 1
		End If
	Next
	countChar = count
End Function
